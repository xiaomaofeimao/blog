<%
function layoutDiv() {
  var el = `<widget class="widget-wrapper${scrollreveal(' ')} post-list">`
  // header
  el += '<div class="widget-header dis-select">';
  el += '<span class="name">' + __("meta.recent_update") + '</span>';
  if (item.rss) {
    el += '<a class="cap-action" id="rss" title="Subscribe" href="' + item.rss + '">';
    el += icon('default:rss')
    el += '</a>';
  }
  el += '</div>';
  // body
  var arr = [];
  if (page.menu_id == 'wiki') {
    arr = theme.wiki.all_pages.filter( p => {
      if (p.wiki) {
        let proj = theme.wiki.tree[p.wiki];
        return proj?.index != false;
      }
      return false
    })
    arr = arr.sort((p1, p2) => p1.updated > p2.updated ? -1 : 1)
  } else if (page.layout === 'notebooks') {
    arr = site.pages.filter(p => p.notebook).sort('-updated')
  } else if (page.notebook) {
    arr = site.pages.filter(p => p.notebook === page.notebook).sort('-updated')
  } else {
    function intersection(p, cfg) {
      let category1 = new Set();
      let category2 = new Set();
      let tag1 = new Set();
      let tag2 = new Set();
      if (p.category && p.category.length){
        // console.log(p.category.data[0].name);
        category1.add(p.category.date[0].name);
      }
      category1.add(p.source.split('/')[1])
      if (p.tags && p.tags.length){
        // console.log(p.tags.data[0].name);
        tag1.add(p.tags.data[0].name);
      }
      for (i in cfg){
        let _cfg = cfg[i].split(' ');
        if (_cfg[0] === "category"){
          category2.add(_cfg[1]);
        }
        if (_cfg[0] === "tag"){
          tag2.add(_cfg[1]);
        }
      }
      // console.log(category1, category2, tag1, tag2);
      if (category1.size + category2.size === Array.from(new Set([...category1,...category2])).length && tag1.size + tag2.size === Array.from(new Set([...tag1,...tag2])).length){
        return false;
      } else {
        return true;
      }
    }
    arr = site.posts.filter( p => p.title && p.title.length > 0 && !intersection(p, ["category 歌词"])); //config.index2_generators[0].exclude
    arr = arr.sort("updated", -1);
}
  el += '<div class="widget-body fs14">'
  arr = arr.filter(p => p.title?.length > 0)
  arr.length = item.limit
  arr.forEach(post => {
    if (!post) { return }
    el += `<a class="item title" href="${url_for(post.link || post.path)}">`
    el += '<span class="title">'
    if (post.wiki) {
      const proj = theme.wiki.tree[post.wiki];
      let name = proj?.name || post?.wiki;
      if (name) {
        el += '<strong>' + name + '</strong>' + '<span class="dot"></span>';
      }
    } else if (page.layout === 'notebooks') {
      const notebook = theme.notebooks.tree[post.notebook]
      const name = notebook?.name || post.notebook
      if (name) {
        el += '<strong>' + name + '</strong>' + '<span class="dot"></span>';
      }
    }
    el += post.title + '</span>';
    el += '</a>';
    el += '';
  });
  el += '</div>';
  el += '</widget>';
  return el;
}
%>
<%- layoutDiv() %>
